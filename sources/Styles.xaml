<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:EmailClientApplication.Controls"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <SolidColorBrush x:Key="EmailItemBorderStylesUnselected">LightGray</SolidColorBrush>
    <SolidColorBrush x:Key="EmailItemBorderStylesSelected">Gray</SolidColorBrush>

    <system:String x:Key="EmailRegex">^[a-zA-Z][\w\.-]*[a-zA-Z0-9]@[a-zA-Z0-9][\w\.-]*[a-zA-Z0-9]\.[a-zA-Z][a-zA-Z\.]*[a-zA-Z]$</system:String>
    
    <Style x:Key="EmailItemSharedShapeStyle" TargetType="Shape">
        <Setter Property="Stroke" Value="{StaticResource EmailItemBorderStylesUnselected}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border}, Path=IsMouseOver}" Value="True">
                <Setter Property="Stroke" Value="{StaticResource EmailItemBorderStylesSelected}" />
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="EmailItemBorderStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="5,1,0,1"></Setter>
        <Setter Property="Control.BorderBrush" Value="{StaticResource EmailItemBorderStylesUnselected}"/>
        <Style.Triggers>
            <Trigger Property="Border.IsMouseOver" Value="True">
                <Setter Property="Control.BorderBrush" Value="{StaticResource EmailItemBorderStylesSelected}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--EmailCollectionTextBox-->
    <Style TargetType="{x:Type Controls:EmailCollectionTextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:EmailCollectionTextBox}">
                    <Border Name="Border"  CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                        <Grid>
                            <WrapPanel Orientation="Horizontal">
                                <WrapPanel Orientation="Horizontal" x:Name="EmailItems" Visibility="Visible"  HorizontalAlignment="Center">
                                    <TextBlock x:Name="WatermarkText" Text="{TemplateBinding WatermarkText}" Foreground="Gray" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed" IsHitTestVisible="True"/>
                                    <ScrollViewer x:Name="PART_ContentHost" IsHitTestVisible="False" Margin="5,0,0,0" />
                                </WrapPanel>
                                <AdornedElementPlaceholder Name="adornedElement" />
                            </WrapPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WatermarkText" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                                <Condition Property="Text" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WatermarkText" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ErrorBorderColor}"/>
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource ErrorBackgroundColor}"/>
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true" >
                <Setter Property="Foreground" Value="Red"/>
                <Setter Property="Background" Value="MistyRose"/>
                <Setter Property="BorderBrush" Value="Red"/>
                <Setter Property="BorderThickness" Value="1.0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource 
                 Self},Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>-->
    </Style>
</ResourceDictionary>